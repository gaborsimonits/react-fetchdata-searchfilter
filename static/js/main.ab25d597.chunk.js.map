{"version":3,"sources":["components/LoadingMask.jsx","components/Laptop.jsx","App.js","api/mockserver.js","index.js"],"names":["LoadingMask","className","Laptop","laptop","useState","show","setShow","name","onClick","brand","weigth","App","laptopsData","setLaptopsData","isLoading","setIsLoading","search","setSearch","sorted","setSorted","useEffect","fetch","then","res","json","data","console","log","filteredLaptops","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","sort","a","b","map","environment","server","createServer","models","seeds","routes","this","namespace","timing","get","schema","request","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAWeA,EATK,kBACnB,qBAAKC,UAAU,eAAf,SACC,gCACC,2CACA,qBAAKA,UAAU,kBCqBHC,G,MAzBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAENC,oBAAS,GAFH,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAO9B,OACC,sBAAKL,UAAU,aAAf,UACC,+CAAkBE,EAAOI,QAEzB,wBAAQC,QARV,WACCF,GAASD,IAOR,SAA0BA,EAAO,eAAiB,iBAEjDA,GACA,mCACC,sBAAKJ,UAAU,cAAf,UACC,+CAAkBE,EAAOM,MAAzB,OACA,gDAAmBN,EAAOO,oBCsGjBC,G,MAvFH,WAAM,MAGqBP,mBAAS,IAH9B,mBAGVQ,EAHU,KAGGC,EAHH,OAIiBT,oBAAS,GAJ1B,mBAIVU,EAJU,KAICC,EAJD,OAMWX,mBAAS,IANpB,mBAMVY,EANU,KAMFC,EANE,OAOWb,oBAAS,GAPpB,mBAOVc,EAPU,KAOFC,EAPE,KA4BjBC,qBAAU,WACTC,MAAM,eACJC,MAAK,SAACC,GACN,OAAOA,EAAIC,UAEXF,MAAK,SAACG,GACNC,QAAQC,IAAIF,GACZZ,EAAeY,GACfV,GAAa,QAEb,IAGH,IAUMa,EAAkBhB,EAAYiB,QAAO,SAAC1B,GAC3C,OAAOA,EAAOI,KAAKuB,cAAcC,SAASf,EAAOc,kBAGlD,OACC,sBAAK7B,UAAU,MAAf,UAGEa,GAAa,cAAC,EAAD,IACd,+BACEF,GACA,qCACC,sBAAKX,UAAU,SAAf,UACC,yCACA,uBACC+B,KAAK,OACLC,YAAY,iBACZC,SAAU,SAACC,GACVlB,EAAUkB,EAAEC,OAAOC,UAGrB,sBAAKpC,UAAU,OAAf,UACC,+CACA,wBAAQO,QAjCK,WACfU,EACHN,EAAY0B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE9B,OAAS6B,EAAE7B,UAExCE,EAAY0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7B,OAAS8B,EAAE9B,UAEzCS,GAAWD,IA2BL,SAA+BA,EAAS,SAAM,iBAG/CU,EAAgBa,KAAI,SAACtC,GAAD,OACpB,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOI,mB,SC/GpB,WAA2D,IAAD,yDAAJ,GAAI,IAApCmC,mBAAoC,MAAtB,cAAsB,EAC3DC,EAASC,YAAa,CACxBF,cACAG,OAAQ,GAERC,MAJwB,SAIlBH,KAENI,OANwB,WAOtBC,KAAKC,UAAY,cACjBD,KAAKE,OAAS,IAEdF,KAAKG,IAAI,KAAK,SAACC,EAAQC,GACrB,MAAO,CACL,CAAE5C,MAAO,QAASF,KAAM,cAAeG,OAAQ,IAC/C,CAAED,MAAO,OAAQF,KAAM,MAAOG,OAAQ,KACtC,CAAED,MAAO,SAAUF,KAAM,MAAOG,OAAQ,YCVlD4C,CAAW,CAAEZ,YAAa,gBAE1Ba,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ab25d597.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoadingMask = () => (\n\t<div className='loading-mask'>\n\t\t<div>\n\t\t\t<p>Loading...</p>\n\t\t\t<div className='spinner'></div>\n\t\t</div>\n\t</div>\n);\n\nexport default LoadingMask;\n","import React, { useState } from \"react\";\n\nconst Laptop = ({ laptop }) => {\n\t// const laptop = props.laptop;\n\tconst [show, setShow] = useState(false);\n\tfunction toggle() {\n\t\tsetShow(!show);\n\t}\n\n\treturn (\n\t\t<div className='laptopCard'>\n\t\t\t<h4>Laptop Name: {laptop.name}</h4>\n\n\t\t\t<button onClick={toggle}>{show ? \"Hide Details\" : \"Show Details\"}</button>\n\n\t\t\t{show && (\n\t\t\t\t<>\n\t\t\t\t\t<div className='laptopCard2'>\n\t\t\t\t\t\t<p>Laptop Brand: {laptop.brand} </p>\n\t\t\t\t\t\t<p>Laptop Weigth: {laptop.weigth}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Laptop;\n","import React, { useEffect, useState } from \"react\";\nimport LoadingMask from \"./components/LoadingMask\";\nimport axios from \"axios\";\nimport Laptop from \"./components/Laptop\";\nimport \"./App.css\";\n\n//CUSTOM HOOK FETCH w ERRORHANDLING______________________________\n// const useData = (url) => {\n// \tconst [loading, setLoading] = useState(true);\n// \tconst [data, setData] = useState(null);\n// \tconst [error, setError] = useState(null);\n\n// \tuseEffect(() => {\n// \t\tfetch(url)\n// \t\t\t.then((res) => {\n// \t\t\t\tif (!res.ok) {\n// \t\t\t\t\tthrow Error(\"Could not fetch the data\");\n// \t\t\t\t}\n// \t\t\t\treturn res.json();\n// \t\t\t})\n// \t\t\t.then((data) => {\n// \t\t\t\tsetData(data);\n// \t\t\t\tsetLoading(false);\n// \t\t\t\tsetError(null);\n// \t\t\t\tconsole.log(data);\n// \t\t\t})\n// \t\t\t.catch((err) => {\n// \t\t\t\tsetLoading(false);\n// \t\t\t\tsetError(err.message);\n// \t\t\t});\n// \t}, [url]);\n// \treturn { loading, data, error };\n// };\n\nconst App = () => {\n\t// const { loading, data, error } = useData(\"/api/laptop\");\n\n\tconst [laptopsData, setLaptopsData] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst [search, setSearch] = useState(\"\");\n\tconst [sorted, setSorted] = useState(false);\n\n\t//AXIOS FETCH______________________________\n\n\t// const url = \"/api/laptop\";\n\t// const getData = async () => {\n\t// \ttry {\n\t// \t\tconst res = await axios.get(url);\n\t// \t\tsetLaptopsData(res.data);\n\t// \t\tconsole.log(data);\n\t// \t} catch (err) {\n\t// \t\tconsole.log(err);\n\t// \t}\n\t// \tsetIsLoading(false);\n\t// };\n\n\t// useEffect(() => {\n\t// \tgetData();\n\t// }, []);\n\n\t//FETCH______________________________\n\tuseEffect(() => {\n\t\tfetch(\"/api/laptop\")\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetLaptopsData(data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, []);\n\n\t//SORT LAPTOPS BY WEIGHT______________________________\n\tconst sortLaptops = () => {\n\t\tif (sorted) {\n\t\t\tlaptopsData.sort((a, b) => b.weigth - a.weigth);\n\t\t} else {\n\t\t\tlaptopsData.sort((a, b) => a.weigth - b.weigth);\n\t\t}\n\t\tsetSorted(!sorted);\n\t};\n\n\t//FILTER SEARCH LAPTOPS BY NAME______________________________\n\tconst filteredLaptops = laptopsData.filter((laptop) => {\n\t\treturn laptop.name.toLowerCase().includes(search.toLowerCase());\n\t});\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{/* {error && <div>{error}</div>} */}\n\n\t\t\t{isLoading && <LoadingMask />}\n\t\t\t<main>\n\t\t\t\t{laptopsData && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='navish'>\n\t\t\t\t\t\t\t<h1>Laptops</h1>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Search laptops'\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetSearch(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='sort'>\n\t\t\t\t\t\t\t\t<p>Sort by weigth</p>\n\t\t\t\t\t\t\t\t<button onClick={sortLaptops}>{sorted ? \"↑\" : \"↓\"}</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{filteredLaptops.map((laptop) => (\n\t\t\t\t\t\t\t<Laptop key={laptop.name} laptop={laptop} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { createServer } from 'miragejs';\nexport function makeServer({ environment = 'development' } = {}) {\n  let server = createServer({\n    environment,\n    models: {\n    },\n    seeds(server) {\n    },\n    routes() {\n      this.namespace = '/api/laptop';\n      this.timing = 2000\n\n      this.get('/', (schema, request) => {\n        return [\n          { brand: \"Apple\", name: \"MacBook Air\", weigth: 0.5 },\n          { brand: \"Asus\", name: \"P30\", weigth: 1.7 },\n          { brand: \"Lenovo\", name: \"A50\", weigth: 1.5 },\n        ]\n      })\n    },\n  });\n  return server;\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { makeServer } from './api/mockserver'\nmakeServer({ environment: 'development' })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}